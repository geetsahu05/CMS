<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add New Building | Room Management System</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');
        
        body {
            font-family: 'Inter', sans-serif;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
        }
        
        .form-card {
            transition: all 0.3s ease;
            box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1);
        }
        
        .form-card:hover {
            box-shadow: 0 20px 45px -10px rgba(0, 0, 0, 0.15);
        }
        
        .floor-card {
            transition: all 0.2s ease;
            border-left: 4px solid #3b82f6;
        }
        
        .floor-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
        }
        
        .input-field {
            transition: all 0.2s ease;
        }
        
        .input-field:focus {
            border-color: #3b82f6;
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.15);
        }
        
        .btn-primary {
            transition: all 0.2s ease;
            background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);
        }
        
        .btn-primary:hover {
            background: linear-gradient(135deg, #2563eb 0%, #1d4ed8 100%);
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(37, 99, 235, 0.25);
        }
        
        .btn-secondary {
            transition: all 0.2s ease;
        }
        
        .btn-secondary:hover {
            background-color: #f8fafc;
        }
        
        .animate-in {
            animation: fadeIn 0.3s ease-out;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
    </style>
</head>
<body class="min-h-screen py-8 px-4">
    <div class="max-w-4xl mx-auto">
        <!-- Header -->
        <div class="text-center mb-8">
            <a href="/adminDash" class="inline-flex items-center text-blue-600 hover:text-blue-800 mb-4">
                <i class="fas fa-arrow-left mr-2"></i> Back to Dashboard
            </a>
            <h1 class="text-3xl font-bold text-gray-800 mb-2">Add New Building</h1>
            <p class="text-gray-600">Create a new building with multiple floors and rooms</p>
        </div>

        <!-- Form Card -->
        <div class="bg-white rounded-xl shadow-lg form-card overflow-hidden">
            <!-- Progress Indicator -->
            <div class="bg-gradient-to-r from-blue-600 to-blue-700 text-white p-4">
                <div class="flex items-center justify-between">
                    <div>
                        <h2 class="text-lg font-semibold">Building Setup</h2>
                        <p class="text-blue-100 text-sm">Step 1: Basic Information</p>
                    </div>
                    <div class="bg-white/20 p-2 rounded-lg">
                        <i class="fas fa-building text-xl"></i>
                    </div>
                </div>
            </div>

            <form id="buildingForm" action="/add_building" method="POST" class="p-6 space-y-6">
                <!-- Building Information -->
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">
                            <i class="fas fa-building text-blue-500 mr-2"></i>Building Name
                        </label>
                        <input type="text" name="buildingName" placeholder="e.g., Main Campus Building" 
                            class="w-full p-3 border rounded-lg input-field focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                            required>
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">
                            <i class="fas fa-layer-group text-blue-500 mr-2"></i>Number of Floors
                        </label>
                        <input type="number" id="numFloors" name="numFloors" placeholder="e.g., 5" 
                            class="w-full p-3 border rounded-lg input-field focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                            required min="1" max="50">
                    </div>
                </div>

                <!-- Floors Container -->
                <div id="floorsContainer" class="space-y-4 mt-6"></div>

                <!-- Action Buttons -->
                <div class="flex flex-col sm:flex-row gap-4 pt-6 border-t border-gray-200">
                    <button type="submit" class="btn-primary text-white py-3 px-6 rounded-lg font-semibold flex items-center justify-center">
                        <i class="fas fa-plus-circle mr-2"></i> Create Building
                    </button>
                    <button type="reset" class="btn-secondary border border-gray-300 text-gray-700 py-3 px-6 rounded-lg font-medium">
                        <i class="fas fa-redo mr-2"></i> Reset Form
                    </button>
                    <a href="/adminDash" class="btn-secondary border border-gray-300 text-gray-700 py-3 px-6 rounded-lg font-medium text-center">
                        <i class="fas fa-times mr-2"></i> Cancel
                    </a>
                </div>
            </form>
        </div>

        <!-- Help Section -->
        <div class="mt-8 bg-blue-50 rounded-lg p-6 border border-blue-200">
            <div class="flex items-start">
                <div class="bg-blue-100 p-3 rounded-full mr-4">
                    <i class="fas fa-info-circle text-blue-600 text-xl"></i>
                </div>
                <div>
                    <h3 class="text-lg font-semibold text-blue-800 mb-2">Need help?</h3>
                    <p class="text-blue-700 text-sm">
                        • Building name should be descriptive and unique<br>
                        • Number of floors must be at least 1<br>
                        • Room numbers should be sequential (e.g., 101, 102, 103...)<br>
                        • Each floor can have different room numbering schemes
                    </p>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.getElementById("numFloors").addEventListener("input", function() {
            let numFloors = parseInt(this.value);
            let floorsContainer = document.getElementById("floorsContainer");
            floorsContainer.innerHTML = ""; // Clear previous fields

            if (numFloors > 0) {
                // Update progress indicator
                const progressText = document.querySelector('.text-sm');
                if (progressText) {
                    progressText.textContent = `Step 2: Configure ${numFloors} Floor${numFloors > 1 ? 's' : ''}`;
                }

                for (let i = 1; i <= numFloors; i++) {
                    let floorDiv = document.createElement("div");
                    floorDiv.classList.add("floor-card", "p-5", "border", "rounded-lg", "bg-gray-50", "animate-in");
                    
                    floorDiv.innerHTML = `
                        <div class="flex items-center justify-between mb-4">
                            <h3 class="text-lg font-semibold text-gray-800 flex items-center">
                                <i class="fas fa-floor-plan text-blue-500 mr-2"></i> Floor ${i}
                            </h3>
                            <span class="bg-blue-100 text-blue-800 text-xs px-3 py-1 rounded-full font-medium">
                                Floor ${i}
                            </span>
                        </div>
                        
                        <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">
                                    Total Rooms
                                </label>
                                <input type="number" name="floors[${i}][totalRooms]" 
                                    placeholder="e.g., 20" class="w-full p-3 border rounded-lg input-field"
                                    required min="1">
                            </div>
                            
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">
                                    Starting Room
                                </label>
                                <input type="number" name="floors[${i}][startRoom]" 
                                    placeholder="e.g., ${i}01" class="w-full p-3 border rounded-lg input-field"
                                    required>
                            </div>
                            
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">
                                    Ending Room
                                </label>
                                <input type="number" name="floors[${i}][endRoom]" 
                                    placeholder="e.g., ${i}20" class="w-full p-3 border rounded-lg input-field"
                                    required>
                            </div>
                        </div>
                        
                        <div class="mt-3 text-xs text-gray-500">
                            <i class="fas fa-lightbulb text-yellow-500 mr-1"></i>
                            Room numbers will be automatically generated in sequence
                        </div>
                    `;
                    floorsContainer.appendChild(floorDiv);
                }
            }
        });

        // Form validation
        document.getElementById("buildingForm").addEventListener("submit", function(e) {
            const numFloors = parseInt(document.getElementById("numFloors").value);
            let isValid = true;
            let errorMessage = "";

            // Validate floor inputs
            for (let i = 1; i <= numFloors; i++) {
                const startRoom = document.querySelector(`input[name="floors[${i}][startRoom]"]`);
                const endRoom = document.querySelector(`input[name="floors[${i}][endRoom]"]`);
                const totalRooms = document.querySelector(`input[name="floors[${i}][totalRooms]"]`);

                if (startRoom && endRoom && totalRooms) {
                    const start = parseInt(startRoom.value);
                    const end = parseInt(endRoom.value);
                    const total = parseInt(totalRooms.value);

                    if (start >= end) {
                        isValid = false;
                        errorMessage = `Floor ${i}: Starting room must be less than ending room`;
                        startRoom.focus();
                        break;
                    }

                    if ((end - start + 1) !== total) {
                        isValid = false;
                        errorMessage = `Floor ${i}: Room count doesn't match (${end - start + 1} rooms vs ${total} specified)`;
                        totalRooms.focus();
                        break;
                    }
                }
            }

            if (!isValid) {
                e.preventDefault();
                alert("Validation Error: " + errorMessage);
            }
        });

        // Add animation to form elements
        document.addEventListener('DOMContentLoaded', function() {
            const formElements = document.querySelectorAll('input, select, textarea');
            formElements.forEach((element, index) => {
                element.style.animationDelay = `${index * 0.05}s`;
                element.classList.add('animate-in');
            });
        });
    </script>
</body>
</html>